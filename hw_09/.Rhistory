image(pic)
str(pic)
red.weigth   = .2989; green.weigth = .587; blue.weigth  = 0.114
img = red.weigth * imageData(pic)[,,1] +
green.weigth * imageData(pic)[,,2] + blue.weigth  * imageData(pic)[,,3]
image(img, col = grey(seq(0, 1, length = 256)))
pca.img = prcomp(img, scale=TRUE)
?image
image(pic)
str(pic)
summary(pca.img)
summary(pca.img)$importance
str(summary(pca.img)$importance)
# to capture 99% of the variance, we need the first 32 components
abline(h=0.99,col="red");abline(v = 32,col="red",lty=3)
plot(summary(pca.img)$importance[3,], type="l",
ylab="%variance explained", xlab="nth component (decreasing order)")
abline(h=0.99,col="red");abline(v = 32,col="red",lty=3)
plot(summary(pca.img)$importance[3,], type="l",
ylab="%variance explained", xlab="nth component (decreasing order)")
abline(h=0.99,col="red");abline(v = 32,col="red",lty=3)
plot(summary(pca.img)$importance[3,], type="l",
ylab="%variance explained", xlab="nth component (decreasing order)")
plot(summary(pca.img)$importance[3,], type="l",
ylab="%variance explained", xlab="nth component (decreasing order)") + abline(h=0.99,col="red");abline(v = 32,col="red",lty=3)
plot(summary(pca.img)$importance[3,], type="l",
ylab="%variance explained", xlab="nth component (decreasing order)"); abline(h=0.99,col="red");abline(v = 32,col="red",lty=3)
plot(summary(pca.img)$importance[3,], type="l",
ylab="%variance explained", xlab="nth component (decreasing order)")+abline(h=0.99,col="red");abline(v = 32,col="red",lty=3)
plot(summary(pca.img)$importance[3,], type="l",
ylab="%variance explained", xlab="nth component (decreasing order)");abline(h=0.99,col="red");abline(v = 32,col="red",lty=3)
plot(summary(pca.img)$importance[3,], type="l",
ylab="%variance explained", xlab="nth component (decreasing order)");abline(h=0.99,col="red");
plot(summary(pca.img)$importance[3,], type="l",
ylab="%variance explained", xlab="nth component (decreasing order)");abline(h=0.99,col="red");abline(v = 32,col="red",lty=3)
plot(summary(pca.img)$importance[3,], type="l",
ylab="%variance explained", xlab="nth component (decreasing order)");abline(h=0.99,col="red");abline(v = 120,col="red",lty=3)
constituents = read.csv("data\\constituents.cvs")
constituents = read.csv("data\\constituents.csv")
View(constituents)
indexes = read.csv("data\\indexes.csv")
View(indexes)
indexes = read.csv("data\\indexes.csv", stringsAsFactors=FALSE)
constituents = read.csv("data\\constituents.csv", stringsAsFactors=FALSE)
print("helo"+"world")
paste("helo","world", sep = "")
str(paste("helo","world", sep = ""))
rep(1, 5)
length(rep(1, 5))
allTmp = read.csv(paste("data\\stock_dfs\\", paste(constituents[1]$Symbol, ".csv", sep= ""), sep = ""), stringsAsFactors = F)
constituents = read.csv("data\\constituents.csv", stringsAsFactors=FALSE)
indexes = read.csv("data\\indexes.csv", stringsAsFactors=FALSE)
allTmp = read.csv(paste("data\\stock_dfs\\", paste(constituents[1]$Symbol, ".csv", sep= ""), sep = ""), stringsAsFactors = F)
allTmp = read.csv(paste("data\\stock_dfs\\", paste(as.character(constituents[1]$Symbol), ".csv", sep= ""), sep = ""), stringsAsFactors = F)
constituents[1]$Symbol
constituents[1,]$Symbol
allTmp = read.csv(paste("data\\stock_dfs\\", paste(as.character(constituents[1,]$Symbol), ".csv", sep= ""), sep = ""), stringsAsFactors = F)
allTmp$Name = rep(constituents[1,]$Symbol, length(allTmp))
View(allTmp)
for (row in 2:nrow(constituents)){
tmp = read.csv(paste("data\\stock_dfs\\", paste(constituents[row,]$Symbol, ".csv", sep= ""), sep = ""), stringsAsFactors = F)
tmp.Name = rep(constituents[row,]$Symbol, length(tmp))
rbind(allTmp, tmp)
}
constituents %>% filter(Symbol != "AOS")
library(dplyr)
constituents %>% filter(Symbol != "AOS") -> constituents
constituents = read.csv("data\\constituents.csv", stringsAsFactors=FALSE)
constituents %>% filter(Symbol != "AOS") -> constituents
indexes = read.csv("data\\indexes.csv", stringsAsFactors=FALSE)
allTmp = read.csv(paste("data\\stock_dfs\\", paste(as.character(constituents[1,]$Symbol), ".csv", sep= ""), sep = ""), stringsAsFactors = F)
allTmp$Name = rep(constituents[1,]$Symbol, length(allTmp))
View(allTmp)
for (row in 2:nrow(constituents)){
tmp = read.csv(paste("data\\stock_dfs\\", paste(constituents[row,]$Symbol, ".csv", sep= ""), sep = ""), stringsAsFactors = F)
tmp.Name = rep(constituents[row,]$Symbol, length(tmp))
rbind(allTmp, tmp)
}
for (row in 2:nrow(constituents)){
tmp = read.csv(paste("data\\stock_dfs\\", paste(constituents[row,]$Symbol, ".csv", sep= ""), sep = ""), stringsAsFactors = F)
tmp$Name = rep(constituents[row,]$Symbol, length(tmp))
rbind(allTmp, tmp)
}
constituents = read.csv("data\\constituents.csv", stringsAsFactors=FALSE)
constituents %>% filter(Symbol != "AOS") -> constituents
indexes = read.csv("data\\indexes.csv", stringsAsFactors=FALSE)
allTmp = read.csv(paste("data\\stock_dfs\\", paste(as.character(constituents[1,]$Symbol), ".csv", sep= ""), sep = ""), stringsAsFactors = F)
allTmp$Name = rep(constituents[1,]$Symbol, length(allTmp))
for (row in 2:nrow(constituents)){
tmp = read.csv(paste("data\\stock_dfs\\", paste(constituents[row,]$Symbol, ".csv", sep= ""), sep = ""), stringsAsFactors = F)
tmp$Name = rep(constituents[row,]$Symbol, length(tmp))
rbind(allTmp, tmp)
}
row = 2
tmp = read.csv(paste("data\\stock_dfs\\", paste(constituents[row,]$Symbol, ".csv", sep= ""), sep = ""), stringsAsFactors = F)
tmp$Name = rep(constituents[row,]$Symbol, length(tmp))
View(tmp)
rbind(allTmp, tmp)
constituents = read.csv("data\\constituents.csv", stringsAsFactors=FALSE)
constituents %>% filter(Symbol != "AOS") -> constituents
indexes = read.csv("data\\indexes.csv", stringsAsFactors=FALSE)
allTmp = read.csv(paste("data\\stock_dfs\\", paste(as.character(constituents[1,]$Symbol), ".csv", sep= ""), sep = ""), stringsAsFactors = F)
allTmp$Name = rep(constituents[1,]$Symbol, length(allTmp))
for (row in 2:nrow(constituents)){
tmp = read.csv(paste("data\\stock_dfs\\", paste(constituents[row,]$Symbol, ".csv", sep= ""), sep = ""), stringsAsFactors = F)
tmp$Name = rep(constituents[row,]$Symbol, length(tmp))
rbind(allTmp, tmp)
}
for (row in 2:nrow(constituents)){
print(row)
tmp = read.csv(paste("data\\stock_dfs\\", paste(constituents[row,]$Symbol, ".csv", sep= ""), sep = ""), stringsAsFactors = F)
tmp$Name = rep(constituents[row,]$Symbol, length(tmp))
rbind(allTmp, tmp)
}
row = 4
tmp = read.csv(paste("data\\stock_dfs\\", paste(constituents[row,]$Symbol, ".csv", sep= ""), sep = ""), stringsAsFactors = F)
tmp$Name = rep(constituents[row,]$Symbol, length(tmp))
View(tmp)
print(constituents[row,]$Symbol)
tmp$Name = rep(constituents[row,]$Symbol, length(tmp))
View(tmp)
row = 4
tmp = read.csv(paste("data\\stock_dfs\\", paste(constituents[row,]$Symbol, ".csv", sep= ""), sep = ""), stringsAsFactors = F)
print(constituents[row,]$Symbol)
tmp$Name = rep(constituents[row,]$Symbol, length(tmp))
t = rep(constituents[row,]$Symbol, length(tmp))
tmp$Name = t
View(t)
print(length(tmp))
View(tmp)
print(length(nrow))
print(nrow(tmp))
constituents = read.csv("data\\constituents.csv", stringsAsFactors=FALSE)
constituents %>% filter(Symbol != "AOS") -> constituents
indexes = read.csv("data\\indexes.csv", stringsAsFactors=FALSE)
allTmp = read.csv(paste("data\\stock_dfs\\", paste(as.character(constituents[1,]$Symbol), ".csv", sep= ""), sep = ""), stringsAsFactors = F)
allTmp$Name = rep(constituents[1,]$Symbol, length(allTmp))
for (row in 2:nrow(constituents)){
tmp = read.csv(paste("data\\stock_dfs\\", paste(constituents[row,]$Symbol, ".csv", sep= ""), sep = ""), stringsAsFactors = F)
tmp$Name = rep(constituents[row,]$Symbol, nrow(tmp))
rbind(allTmp, tmp)
}
constituents = read.csv("data\\constituents.csv", stringsAsFactors=FALSE)
constituents %>% filter(Symbol != "AOS", Symbol != "AMD") -> constituents
indexes = read.csv("data\\indexes.csv", stringsAsFactors=FALSE)
allTmp = read.csv(paste("data\\stock_dfs\\", paste(as.character(constituents[1,]$Symbol), ".csv", sep= ""), sep = ""), stringsAsFactors = F)
allTmp$Name = rep(constituents[1,]$Symbol, length(allTmp))
for (row in 2:nrow(constituents)){
tmp = read.csv(paste("data\\stock_dfs\\", paste(constituents[row,]$Symbol, ".csv", sep= ""), sep = ""), stringsAsFactors = F)
tmp$Name = rep(constituents[row,]$Symbol, nrow(tmp))
rbind(allTmp, tmp)
}
constituents = read.csv("data\\constituents.csv", stringsAsFactors=FALSE)
badC = ("AOS", "AMD", "ARE")
constituents = read.csv("data\\constituents.csv", stringsAsFactors=FALSE)
badC = c("AOS", "AMD", "ARE")
constituents %>% filter(Symbol %in% badC) -> constituents
indexes = read.csv("data\\indexes.csv", stringsAsFactors=FALSE)
allTmp = read.csv(paste("data\\stock_dfs\\", paste(as.character(constituents[1,]$Symbol), ".csv", sep= ""), sep = ""), stringsAsFactors = F)
constituents = read.csv("data\\constituents.csv", stringsAsFactors=FALSE)
badC = c("AOS", "AMD", "ARE", "AOS")
constituents %>% filter(Symbol %in% badC) -> constituents
indexes = read.csv("data\\indexes.csv", stringsAsFactors=FALSE)
allTmp = read.csv(paste("data\\stock_dfs\\", paste(as.character(constituents[1,]$Symbol), ".csv", sep= ""), sep = ""), stringsAsFactors = F)
constituents = read.csv("data\\constituents.csv", stringsAsFactors=FALSE)
indexes = read.csv("data\\indexes.csv", stringsAsFactors=FALSE)
allTmp = read.csv(paste("data\\stock_dfs\\", paste(as.character(constituents[1,]$Symbol), ".csv", sep= ""), sep = ""), stringsAsFactors = F)
allTmp$Name = rep(constituents[1,]$Symbol, length(allTmp))
for (row in 2:nrow(constituents)){
filename = paste("data\\stock_dfs\\", paste(constituents[row,]$Symbol, ".csv", sep= ""), sep = "")
if (file.exists(filename)){
tmp = read.csv(, stringsAsFactors = F)
tmp$Name = rep(constituents[row,]$Symbol, nrow(tmp))
rbind(allTmp, tmp)
}
}
f <- paste0("C://Users//Prices//",companiesIsin,".csv")
f <- paste0("C://Users//Prices//","companiesIsin",".csv")
f
for (row in 2:nrow(constituents)){
filename = paste("data\\stock_dfs\\", paste(constituents[row,]$Symbol, ".csv", sep= ""), sep = "")
if (file.exists(filename)){
tmp = read.csv(, stringsAsFactors = F)
tmp$Name = rep(constituents[row,]$Symbol, nrow(tmp))
rbind(allTmp, tmp)
}
}
file.exists("data\\places.txt")
file.exists("data\\placfes.txt")
row = 2
filename = paste("data\\stock_dfs\\", paste(constituents[row,]$Symbol, ".csv", sep= ""), sep = "")
if (file.exists(filename)){
tmp = read.csv(, stringsAsFactors = F)
tmp$Name = rep(constituents[row,]$Symbol, nrow(tmp))
rbind(allTmp, tmp)
}
row = 4
filename = paste("data\\stock_dfs\\", paste(constituents[row,]$Symbol, ".csv", sep= ""), sep = "")
if (file.exists(filename)){
tmp = read.csv(, stringsAsFactors = F)
tmp$Name = rep(constituents[row,]$Symbol, nrow(tmp))
rbind(allTmp, tmp)
}
file.exists(filename)
row = 4
filename = paste("data\\stock_dfs\\", paste(constituents[row,]$Symbol, ".csv", sep= ""), sep = "")
file.exists(filename)
tmp = read.csv(, stringsAsFactors = F)
row = 4
filename = paste("data\\stock_dfs\\", paste(constituents[row,]$Symbol, ".csv", sep= ""), sep = "")
file.exists(filename)
if (file.exists(filename)){
tmp = read.csv(filename, stringsAsFactors = F)
tmp$Name = rep(constituents[row,]$Symbol, nrow(tmp))
rbind(allTmp, tmp)
}
constituents = read.csv("data\\constituents.csv", stringsAsFactors=FALSE)
indexes = read.csv("data\\indexes.csv", stringsAsFactors=FALSE)
allTmp = read.csv(paste("data\\stock_dfs\\", paste(as.character(constituents[1,]$Symbol), ".csv", sep= ""), sep = ""), stringsAsFactors = F)
allTmp$Name = rep(constituents[1,]$Symbol, length(allTmp))
for (row in 2:nrow(constituents)){
filename = paste("data\\stock_dfs\\", paste(constituents[row,]$Symbol, ".csv", sep= ""), sep = "")
if (file.exists(filename)){
tmp = read.csv(filename, stringsAsFactors = F)
tmp$Name = rep(constituents[row,]$Symbol, nrow(tmp))
rbind(allTmp, tmp)
}
}
View(allTmp)
View(constituents)
View(indexes)
```
constituents = read.csv("data\\constituents.csv", stringsAsFactors=FALSE)
indexes = read.csv("data\\indexes.csv", stringsAsFactors=FALSE)
allTmp = read.csv(paste("data\\stock_dfs\\", paste(as.character(constituents[1,]$Symbol), ".csv", sep= ""), sep = ""), stringsAsFactors = F)
allTmp$Name = rep(constituents[1,]$Symbol, length(allTmp))
for (row in 2:nrow(constituents)){
filename = paste("data\\stock_dfs\\", paste(constituents[row,]$Symbol, ".csv", sep= ""), sep = "")
if (file.exists(filename)){
tmp = read.csv(filename, stringsAsFactors = F)
tmp$Name = rep(constituents[row,]$Symbol, nrow(tmp))
rbind(allTmp, tmp)
}
}
```
rm(list=ls())
constituents = read.csv("data\\constituents.csv", stringsAsFactors=FALSE)
indexes = read.csv("data\\indexes.csv", stringsAsFactors=FALSE)
allTmp = read.csv(paste("data\\stock_dfs\\", paste(as.character(constituents[1,]$Symbol), ".csv", sep= ""), sep = ""), stringsAsFactors = F)
allTmp$Name = rep(constituents[1,]$Symbol, length(allTmp))
for (row in 2:nrow(constituents)){
filename = paste("data\\stock_dfs\\", paste(constituents[row,]$Symbol, ".csv", sep= ""), sep = "")
if (file.exists(filename)){
tmp = read.csv(filename, stringsAsFactors = F)
tmp$Name = rep(constituents[row,]$Symbol, nrow(tmp))
rbind(allTmp, tmp)
}
}
```
allTmp = read.csv(paste("data\\stock_dfs\\", paste(as.character(constituents[1,]$Symbol), ".csv", sep= ""), sep = ""), stringsAsFactors = F)
allTmp$Name = rep(constituents[1,]$Symbol, length(allTmp))
for (row in 2:nrow(constituents)){
filename = paste("data\\stock_dfs\\", paste(constituents[row,]$Symbol, ".csv", sep= ""), sep = "")
if (file.exists(filename)){
tmp = read.csv(filename, stringsAsFactors = F)
tmp$Name = rep(constituents[row,]$Symbol, nrow(tmp))
rbind(allTmp, tmp)
}
}
View(allTmp)
for (row in 2:nrow(constituents)){
filename = paste("data\\stock_dfs\\", paste(constituents[row,]$Symbol, ".csv", sep= ""), sep = "")
if (file.exists(filename)){
tmp = read.csv(filename, stringsAsFactors = F)
tmp$Name = rep(constituents[row,]$Symbol, nrow(tmp))
allTmp = rbind(allTmp, tmp)
}
}
View(allTmp)
allTmp = read.csv(paste("data\\stock_dfs\\", paste(as.character(constituents[1,]$Symbol), ".csv", sep= ""), sep = ""), stringsAsFactors = F)
allTmp$Symbol = rep(constituents[1,]$Symbol, length(allTmp))
allTmp$Name = rep(constituents[1,]$Name, nrow(tmp))
allTmp$Sector = rep(constituents[1,]$Sector, nrow(tmp))
allTmp = read.csv(paste("data\\stock_dfs\\", paste(as.character(constituents[1,]$Symbol), ".csv", sep= ""), sep = ""), stringsAsFactors = F)
indexes = read.csv("data\\indexes.csv", stringsAsFactors=FALSE)
allTmp = read.csv(paste("data\\stock_dfs\\", paste(as.character(constituents[1,]$Symbol), ".csv", sep= ""), sep = ""), stringsAsFactors = F)
allTmp$Symbol = rep(constituents[1,]$Symbol, length(allTmp))
allTmp$Name = rep(constituents[1,]$Name, nrow(tmp))
allTmp$Name = rep(constituents[1,]$Name, nrow(allTmp))
allTmp$Sector = rep(constituents[1,]$Sector, nrow(allTmp))
for (row in 2:nrow(constituents)){
filename = paste("data\\stock_dfs\\", paste(constituents[row,]$Symbol, ".csv", sep= ""), sep = "")
if (file.exists(filename)){
tmp = read.csv(filename, stringsAsFactors = F)
tmp$Symbol = rep(constituents[row,]$Symbol, nrow(tmp))
tmp$Name = rep(constituents[row,]$Name, nrow(tmp))
tmp$Sector = rep(constituents[row,]$Sector, nrow(tmp))
allTmp = rbind(allTmp, tmp)
}
}
all_consts = allTmp
View(all_consts)
str(allTmp$Date)
split("hello world")
strsplit("hello world", " ")
strsplit("122-42-5", "-")[0]
strsplit("122-42-5", "-")
strsplit("122-42-5", ' ')
strsplit("122-42-5", '-')
strsplit("122-42-5", '-')[0]
strsplit("122-42-5", '-')
strsplit("122-42-5", '-')[1]
strsplit("122-42-5", '-')[1][1]
strsplit("122-42-5", '-')[1,1]
str(strsplit("122-42-5", '-'))
as.vector(strsplit("122-42-5", '-'))[1]
as.vector(strsplit("122-42-5", '-'))
str(as.vector(strsplit("122-42-5", '-')))
str(as.integer(strsplit("122-42-5", '-')))
str(as.character(strsplit("122-42-5", '-')))
str(as.array(strsplit("122-42-5", '-')))
str(as.array(strsplit("122-42-5", '-'))[1])
strsplit("122-42-5", '-') %>% unlist()
strsplit("122-42-5", '-') %>% unlist() %>% .[1]
all_consts = allTmp %>% rowwise( ) %>% mutate (day = integer(unlist(strsplit(Date))[3], '-'), month = integer(unlist(strsplit(Date))[2], '-'), year = integer(unlist(strsplit(Date))[1], '-'))
all_consts = allTmp %>% rowwise( ) %>% mutate (day = integer(unlist(strsplit(Date,  '-'))[3]), month = integer(unlist(strsplit(Date,  '-'))[2],), year = integer(unlist(strsplit(Date '-'))[1]))
all_consts = allTmp %>% rowwise( ) %>% mutate (day = integer(unlist(strsplit(Date,  '-'))[3]), month = integer(unlist(strsplit(Date,  '-'))[2]), year = integer(unlist(strsplit(Date '-'))[1]))
all_consts = allTmp %>% rowwise( ) %>% mutate (day = integer(unlist(strsplit(Date,  '-'))[3]), month = integer(unlist(strsplit(Date,  '-'))[2]), year = integer(unlist(strsplit(Date, '-'))[1]))
str(allTmp$Date)
all_consts = allTmp %>% rowwise( ) %>% mutate (day = integer(unlist(strsplit(Date,  '-'))[3]), month = integer(unlist(strsplit(Date,  '-'))[2]), year = integer(unlist(strsplit(Date, '-'))[1]))
c = integer(unlist(strsplit("2000-7-31", '-'))[1])
c
c = integer(unlist(strsplit("2000-7-31", '-')))
c = integer(unlist(strsplit("2000-7-31", '-'))[2])
c
c = (unlist(strsplit("2000-7-31", '-'))[2])
c
c = as.integer(unlist(strsplit("2000-7-31", '-'))[2])
c
all_consts = allTmp %>% rowwise( ) %>% mutate (day = as.integer(unlist(strsplit(Date,  '-'))[3]), month = as.integer(unlist(strsplit(Date,  '-'))[2]), year = as.integer(unlist(strsplit(Date, '-'))[1]))
str(allTmp$Date)
all_consts = allTmp %>% rowwise( ) %>% mutate (day = as.integer(unlist(strsplit(Date,  '-'))[3]), month = as.integer(unlist(strsplit(Date,  '-'))[2]), year = as.integer(unlist(strsplit(Date, '-'))[1]))
View(all_consts)
lead(1:10, 1)
lead(1:10, 2)
all_consts %>% arrange(year, month, day)
all_consts %>% arrange(year, month, day) %>% group_by(Symbol, year) %>% summarise(prof = last(Close) - first(Open)) %>% arrange(-prof) -> tmp
tmp
all_consts %>% arrange(year, month, day) %>% group_by(Symbol, year) %>% summarise(prof = (last(Close) - first(Open))/first(Open)) %>% arrange(-prof) -> tmp
tmp
tmp2$prof2 = c(0, nrow(tmp2))
tmp2 = all_consts
tmp2$prof2 = c(0, nrow(tmp2))
tmp2$prof2 = rep(0, nrow(tmp2))
tmp2 = all_consts %>% arrange(year, month, day)
for ( row in 1:nrow(tmp2)){
lastRow = row - 2 * 365
if(lastRow > 0)
if (tmp2[row,]$Symbol == tmp2[lastRow,]$Symbol){
tmp2$prof2 = (tmp2[row,]$Close - tmp2[lastRow,]$open)/tmp2[lastRow,]$open
}
}
View(tmp2)
tmp2 = all_consts %>% arrange(year, month, day)
tmp2$prof2 = rep(0, nrow(tmp2))
View(tmp2)
for ( row in 1:nrow(tmp2)){
lastRow = row - 2 * 365
if(lastRow > 0)
if (tmp2[row,]$Symbol == tmp2[lastRow,]$Symbol){
tmp2$prof2 = (tmp2[row,]$Close - tmp2[lastRow,]$open)/tmp2[lastRow,]$open
}
}
View(tmp2)
row = 900
lastRow = row - 2 * 365
tmp2[row,]$prof2 = (tmp2[row,]$Close - tmp2[lastRow,]$open)/tmp2[lastRow,]$open
print(tmp2[row,]$Close - tmp2[lastRow,]$open)/tmp2[lastRow,]$open)
print((tmp2[row,]$Close - tmp2[lastRow,]$open)/tmp2[lastRow,]$open)
str(tmp2[0,]$Close)
tmp2[row,]$prof2 = (tmp2[row,]$Close - tmp2[lastRow,]$open)/tmp2[lastRow,]$open
print((tmp2[row,]$Close - tmp2[lastRow,]$open)/tmp2[lastRow,]$open)
print((tmp2[row,]$Close - tmp2[lastRow,]$Open)/tmp2[lastRow,]$Open)
tmp2[row,]$prof2 = (tmp2[row,]$Close - tmp2[lastRow,]$Open)/tmp2[lastRow,]$Open
tmp2[row,]
tmp2 = all_consts %>% arrange(year, month, day)
tmp2$prof2 = rep(0, nrow(tmp2))
for ( row in 1:nrow(tmp2)){
lastRow = row - 2 * 365
if(lastRow > 0)
if (tmp2[row,]$Symbol == tmp2[lastRow,]$Symbol){
tmp2[row,]$prof2 = (tmp2[row,]$Close - tmp2[lastRow,]$Open)/tmp2[lastRow,]$Open
}
}
View(tmp2)
row = 900
tmp2$prof2 = rep(0, nrow(tmp2))
lastRow = row - 2 * 365
if(lastRow > 0)
if (tmp2[row,]$Symbol == tmp2[lastRow,]$Symbol){
tmp2[row,]$prof2 = (tmp2[row,]$Close - tmp2[lastRow,]$Open)/tmp2[lastRow,]$Open
}
if(lastRow > 0){
if (tmp2[row,]$Symbol == tmp2[lastRow,]$Symbol){
tmp2[row,]$prof2 = (tmp2[row,]$Close - tmp2[lastRow,]$Open)/tmp2[lastRow,]$Open
}
}
tmp2[row,]
print(lastRow)
trlastRow)
str(lastRow)
tmp2[row,]$Symbol == tmp2[lastRow,]$Symbol
tmp2[row,]$Symbol
tmp2[lastRow,]$Symbol
tmp2[row,]$Symbol
tmp2[lastRow,]$Symbol
row = 113390
lastRow = row - 2 * 365
tmp2[row,]$Symbol
tmp2[lastRow,]$Symbol
tmp2 = all_consts %>% arrange(Symbol, year, month, day)
row = 113390
lastRow = row - 2 * 365
tmp2[row,]$Symbol
tmp2[lastRow,]$Symbol
row = 11339
lastRow = row - 2 * 365
tmp2[row,]$Symbol
tmp2[lastRow,]$Symbol
row = 1133933
lastRow = row - 2 * 365
tmp2[row,]$Symbol
tmp2[lastRow,]$Symbol
tmp2[row,]$prof2 = (tmp2[row,]$Close - tmp2[lastRow,]$Open)/tmp2[lastRow,]$Open
tmp2[row,]
tmp2$prof2 = rep(0, nrow(tmp2))
row = 1133933
lastRow = row - 2 * 365
tmp2[row,]$Symbol
tmp2[lastRow,]$Symbol
tmp2[row,]$prof2 = (tmp2[row,]$Close - tmp2[lastRow,]$Open)/tmp2[lastRow,]$Open
tmp2[row,]
tmp2 = all_consts %>% arrange(Symbol, year, month, day)
for ( row in 1:nrow(tmp2)){
if(lastRow > 0){
if (tmp2[row,]$Symbol == tmp2[lastRow,]$Symbol){
tmp2[row,]$prof2 = (tmp2[row,]$Close - tmp2[lastRow,]$Open)/tmp2[lastRow,]$Open
}
}
}
tmp2 = all_consts %>% arrange(Symbol, year, month, day)
for ( row in 1:nrow(tmp2)){
lastRow = row - 2 * 365
if(lastRow > 0){
if (tmp2[row,]$Symbol == tmp2[lastRow,]$Symbol){
tmp2[row,]$prof2 = (tmp2[row,]$Close - tmp2[lastRow,]$Open)/tmp2[lastRow,]$Open
}
}
}
tmp2 = all_consts %>% arrange(Symbol, year, month, day)
row = 13000
lastRow = row - 2 * 365
if(lastRow > 0){
if (tmp2[row,]$Symbol == tmp2[lastRow,]$Symbol){
tmp2[row,]$prof2 = (tmp2[row,]$Close - tmp2[lastRow,]$Open)/tmp2[lastRow,]$Open
}
}
print(lastRow)
print(tmp2[row,]$Symbol)
print(tmp2[lastRow,]$Symbol)
tmp2[row,]$Symbol == tmp2[lastRow,]$Symbol
tmp2[row,]$prof2 = (tmp2[row,]$Close - tmp2[lastRow,]$Open)/tmp2[lastRow,]$Open
tmp2[row,]
tmp2$prof2 = rep(0, nrow(tmp2))
tmp2[row,]$prof2 = (tmp2[row,]$Close - tmp2[lastRow,]$Open)/tmp2[lastRow,]$Open
tmp2[row,]
row = 13000
lastRow = row - 2 * 365
print(lastRow)
print(tmp2[row,]$Symbol)
print(tmp2[lastRow,]$Symbol)
tmp2[row,]$Symbol == tmp2[lastRow,]$Symbol
if(lastRow > 0){
if (tmp2[row,]$Symbol == tmp2[lastRow,]$Symbol){
tmp2[row,]$prof2 = (tmp2[row,]$Close - tmp2[lastRow,]$Open)/tmp2[lastRow,]$Open
tmp2[row,]
}
}
tmp2[row,]
tmp2 = all_consts %>% arrange(Symbol, year, month, day)
tmp2$prof2 = rep(0, nrow(tmp2))
lastRow = row - 2 * 365
row = 13000
lastRow = row - 2 * 365
print(lastRow)
print(tmp2[row,]$Symbol)
print(tmp2[lastRow,]$Symbol)
tmp2[row,]$Symbol == tmp2[lastRow,]$Symbol
tmp2[row,]$prof2 = (tmp2[row,]$Close - tmp2[lastRow,]$Open)/tmp2[lastRow,]$Open
tmp2[row,]
for ( row in 1:nrow(tmp2)){
lastRow = row - 2 * 365
if(lastRow > 0){
if (tmp2[row,]$Symbol == tmp2[lastRow,]$Symbol){
tmp2[row,]$prof2 = (tmp2[row,]$Close - tmp2[lastRow,]$Open)/tmp2[lastRow,]$Open
}
}
}
company = "MMM"
all_consts %>% filter(Symbol == company) -> tmp
all_consts %>% filter(Symbol == company) -> tmp
all_consts %>% filter(Symbol == company) -> tmp
